version: 2.1

orbs:
  python: circleci/python@1.5.0
  aws-cli: circleci/aws-cli@2.0.6

jobs:
  test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run linting
          command: flake8

  deploy:
    executor: aws-cli/default
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - run:
          name: Build Docker image
          command: |
            SHA1="$CIRCLE_SHA1"
            docker build -t marcout/lettings-app .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker tag marcout/lettings-app:latest marcout/lettings-app:"$SHA1"
            docker push marcout/lettings-app:"$SHA1"
      - run:
          name: Pull Docker image
          command: |
            SHA1="$CIRCLE_SHA1"
            docker pull marcout/lettings-app:"$SHA1"
      - run:
          name: Push Docker image to EC2
          command: |
            echo "$SSH_PRIVATE_KEY" > ssh_key.pem
            chmod 600 ssh_key.pem
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker stop $(docker ps -q) || true'
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker rm $(docker ps -q) || true'
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker login -u $DOCKER_USER -p $DOCKER_PASSWORD'
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker tag marcout/lettings-app:"'$SHA1'" marcout/lettings-app:"'$SHA1'"'
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker push marcout/lettings-app:"'$SHA1'"'
            ssh -o StrictHostKeyChecking=no ec2-user@3.250.217.211 'docker run -d -p 8000:8000 marcout/lettings-app:"'$SHA1'"'
      - run:
          name: Create release and notify Sentry of deploy
          command: |
            export SENTRY_ENVIRONMENT=production
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE --log-level=debug


workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: master

  master-workflow:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
