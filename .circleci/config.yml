version: 2.1

orbs:
  python: circleci/python@1.5.0
  aws-cli: circleci/aws-cli@2.0.6

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.7
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run coverage
          command: pytest --cov=.
      - run:
          name: Run linting
          command: flake8
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            SHA1="$CIRCLE_SHA1"
            docker build -t marcout/lettings-app .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker tag marcout/lettings-app:latest marcout/lettings-app:"$SHA1"
            docker push marcout/lettings-app:"$SHA1"

  deploy:
    executor: aws-cli/default
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - aws-cli/setup
      - run:
          name: Push Docker image to ECR
          command: |
            SHA1="$CIRCLE_SHA1"
            docker build -t marcout/lettings-app .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker tag marcout/lettings-app:latest marcout/lettings-app:"$SHA1"
            docker push marcout/lettings-app:"$SHA1"
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/f9r8d7r0
            docker tag marcout/lettings-app:"$SHA1" public.ecr.aws/f9r8d7r0/lettings-app:"${SHA1}"
            docker push public.ecr.aws/f9r8d7r0/lettings-app:"${SHA1}"
      - run:
          name: Push image ECR to App Runner
          command: |
            SHA1="$CIRCLE_SHA1"
            SERVICE_ARN="arn:aws:apprunner:eu-west-1:935486624820:service/Lettings/e4e745a7cfc14b7bb3a647344759b057"
            ECR_PUBLIC_ARN="public.ecr.aws/f9r8d7r0/lettings-app:"
            aws apprunner update-service \
              --service-arn "$SERVICE_ARN" \
              --source-configuration "ImageRepository={ImageIdentifier=$ECR_PUBLIC_ARN:${SHA1},ImageRepositoryType=ECR_PUBLIC}" \
              --region us-east-1
           
workflows:
  version: 2
  test-the-application:
    jobs:
      - build-and-test
      - deploy
